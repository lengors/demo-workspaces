---
name: Build and deploy schemas

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  deploy:
    name: Deploy schemas
    runs-on: ubuntu-latest
    environment: deployment
    steps:
      - name: Create GitHub app token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVATE_KEY }}

      - name: Checkout repository on source branch
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          path: source
          ref: ${{ github.ref }}

      - name: Checkout repository on schemas branch
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          path: schemas
          ref: schemas

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: source/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: source

      - name: Build schemas
        run: npm run build --workspaces
        working-directory: source

      - name: Copy schemas to schemas branch
        working-directory: schemas
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +
          cp -R ../source/generator/dist/* ./

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import-gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          workdir: schemas

      - name: Commit and tag schemas
        run: |
          ref=${{ github.ref }}
          git config user.name "${{ steps.import-gpg.outputs.name }}"
          git config user.email "${{ steps.import-gpg.outputs.email }}"
          git add ${{ github.ref_name }}
          git commit -m "üóÉÔ∏è Update schemas for version ${ref/refs\/tags\//}"
          git tag -s -m "Release ${ref/refs\/tags\//}" "schemas-${ref/refs\/tags\//}"
          git push
        working-directory: schemas
